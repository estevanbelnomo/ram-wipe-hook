#!/usr/bin/env bash
# Minimal shunit2-like test framework.

# Assertion helpers
assertEquals() {
  local expected=$1 actual=$2
  if [ "$expected" != "$actual" ]; then
    echo "expected <$expected> but was <$actual>" >&2
    return 1
  fi
  return 0
}

assertNotEquals() {
  local not_expected=$1 actual=$2
  if [ "$not_expected" == "$actual" ]; then
    echo "did not expect <$not_expected>" >&2
    return 1
  fi
  return 0
}

fail() {
  echo "$1" >&2
  return 1
}

# Test runner
_shunit_failed=0
for test_func in $(declare -F | awk '{print $3}' | grep '^test_'); do
  if command -v setUp >/dev/null; then setUp; fi
  "$test_func"
  rc=$?
  if command -v tearDown >/dev/null; then tearDown; fi
  if [ $rc -ne 0 ]; then
    echo "$test_func...FAIL"
    _shunit_failed=1
  else
    echo "$test_func...ok"
  fi

done
exit $_shunit_failed
